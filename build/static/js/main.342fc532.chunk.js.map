{"version":3,"sources":["constants/actions.js","redux/reducers/user.js","redux/reducers/site.js","redux/reducers/index.js","redux/store.js","actions/authActions.js","components/Landing.js","App.js","constants/site.js","index.js"],"names":["LOGIN","initialState","hipsterPercent","name","loggedIn","authToken","refreshToken","error","loading","combineReducers","user","state","action","type","types","Object","assign","site","createStore","rootReducer","applyMiddleware","thunk","logger","login","dispatch","getState","verifiedTokens","tokens","localStorage","getItem","checkForTokens","needToBreakCache","lastToken","moment","add","checkCacheTimestamp","clear","e","hashParams","r","q","window","location","hash","substring","exec","decodeURIComponent","getHashParams","console","log","token","refresh","setItem","format","getAndSetTokens","Landing","className","onClick","props","Component","connect","bindActionCreators","App","this","history","push","rootElement","document","getElementById","ReactDOM","render","store"],"mappings":"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","file":"static/js/main.342fc532.chunk.js","sourcesContent":["// Auth related actions\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\n","import * as types from '../../constants/actions';\n\nconst initialState = {\n    hipsterPercent: null,\n    name: null,\n    loggedIn: false,\n    authToken: null,\n    refreshToken: null\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case types.LOGIN:\n            return Object.assign({}, state, {\n               loggedIn: true,\n                authToken: action.authToken,\n                refreshToken: action.refreshToken\n            });\n        default:\n            return state;\n    }\n}\n","\nconst initialState = {\n    error: null,\n    loading: false,\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from \"redux\";\nimport user from \"./user\";\nimport site from \"./site\";\n\nexport default combineReducers({ user, site });\n","import {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger'\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer, applyMiddleware(thunk, logger));\n","import axios from 'axios';\nimport { get } from 'lodash';\nimport moment from 'moment';\n\n\nimport {SERVER_URL} from '../constants/site';\nimport * as types from '../constants/actions';\n\n\nexport function setLoggedIn(token, refresh) {\n    return {type: types.LOGIN, authToken: token, refreshToken: refresh};\n}\n\nexport function setLogOut() {\n    return dispatch => {\n        localStorage.clear();\n        dispatch({type: types.LOGOUT});\n    }\n}\n\nfunction checkForTokens(tokens) {\n    let { authToken = null, refreshToken = null } = tokens;\n    if (authToken && refreshToken) {\n        return tokens;\n    } else {\n        refreshToken = localStorage.getItem('refreshToken');\n        authToken = localStorage.getItem('authToken');\n        if (refreshToken && authToken) {\n            tokens = {authToken, refreshToken};\n        } else {\n            tokens = null;\n        }\n    }\n    return tokens;\n}\n\nfunction checkCacheTimestamp() {\n    const lastToken = localStorage.getItem('timestamp');\n    return lastToken && moment(lastToken).add(1, 'day') < moment(lastToken);\n}\n\n// Appears unused because it is accessed on load\nexport function login() {\n\n    return (dispatch, getState) => {\n\n        const {authToken, refreshToken } = getState().user;\n\n        const tokens = {authToken, refreshToken};\n\n        const verifiedTokens = checkForTokens(tokens);\n        const needToBreakCache = checkCacheTimestamp();\n\n        if (!verifiedTokens || needToBreakCache) {\n            localStorage.clear();\n        }\n\n        dispatch(getAndSetTokens(verifiedTokens));\n    }\n}\n\nfunction getAndSetTokens(tokens) {\n\n    tokens = tokens || getHashParams();\n\n    console.log(tokens);\n\n    return (dispatch) => {\n        if (!tokens.authToken || !tokens.refreshToken || tokens.error) {\n            dispatch(setLogOut());\n        } else {\n            localStorage.setItem('authToken', tokens.authToken);\n            localStorage.setItem('refreshToken', tokens.refreshToken);\n            localStorage.setItem('timestamp', moment().format('X'));\n            dispatch(setLoggedIn(tokens.authToken, tokens.refreshToken));\n        }\n    }\n}\n\n// getting the parameters sent from oAuth in server\nfunction getHashParams() {\n    let hashParams = {};\n    let e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q);\n    while (e) {\n        hashParams[e[1]] = decodeURIComponent(e[2]);\n        e = r.exec(q);\n    }\n\n    const {\n        authToken,\n        refreshToken,\n        error\n    } = hashParams;\n\n    if (error) {\n        return error;\n    } else {\n        return {authToken, refreshToken};\n    }\n}\n","import PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport React, { Component } from 'react';\n\nimport {login} from '../actions/authActions';\n\nclass Landing extends Component {\n\n    render() {\n        return (\n            <div className=\"Landing\">\n                <h1> How Hipster Are You? </h1>\n                <h3> Blah </h3>\n                <div className=\"app-buttonContainer\">\n                    <a onClick={() => this.props.login()}>\n                        <button className=\"largeButton\"> Log In With Spotify </button>\n                    </a>\n                </div>\n            </div>\n        );\n    }\n}\n\nLanding.propTypes = {\n    login: PropTypes.function\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        login: bindActionCreators(login, dispatch),\n    };\n}\n\n\nexport default connect(null, mapDispatchToProps)(Landing)\n","import React, { Component } from \"react\";\nimport {connect} from 'react-redux';\n\nimport Landing from './components/Landing';\nimport Results from './components/Results';\nimport {bindActionCreators} from \"redux\";\nimport {login} from \"./actions/authActions\";\nimport { CLIENT_URL } from './constants/site';\n\nclass App extends Component {\n\n    componentWillMount() {\n        this.props.login();\n        this.props.history.push({}, CLIENT_URL);\n    };\n\n    render() {\n\n        const { loggedIn } = this.props.user;\n\n        return (\n            <div className=\"App\">\n                {\n                    loggedIn ?\n                        <Results />\n                        :\n                        <Landing />\n                }\n            </div>\n        );\n    }\n\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.user,\n        error: state.site.error,\n        loading: state.site.loading\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        login: bindActionCreators(login, dispatch),\n    };\n}\n\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n) (App);\n","export const SERVER_URL = \"http://localhost:2020\";\nexport const CLIENT_URL = \"http://localhost:3000\";\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { Provider } from 'react-redux'\nimport store from './redux/store';\n\nimport App from './App'\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n<Provider store={store}>\n    <App />\n</Provider>,\nrootElement\n);\n"],"sourceRoot":""}