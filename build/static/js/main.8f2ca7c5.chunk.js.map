{"version":3,"sources":["constants/actions.js","redux/reducers/user.js","redux/reducers/site.js","redux/reducers/index.js","redux/store.js","components/About.js","actions/hipsterActions.js","constants/responseMessages.js","history.js","actions/authActions.js","components/Landing.js","components/Loading.js","actions/userActions.js","components/Results.js","components/Error.js","App.js","index.js"],"names":["LOGIN","LOGOUT","REFRESH_TOKEN_SUCCESS","REFRESH_TOKEN_FAILURE","FETCH_HIPSTER_DATA","FETCH_HIPSTER_DATA_SUCCESS","FETCH_HIPSTER_DATA_FAILURE","FETCH_ARTISTS_SUCCESS","SET_LOADING_MESSAGE","SUBMIT_CONTACT_SUCCESS","SUBMIT_CONTACT_ERROR","initialState","hipsterPercent","mostPopularTrack","leastPopularTrack","emailSubmitSuccess","topArtists","name","loggedIn","authToken","refreshToken","error","loading","loadingMessage","combineReducers","user","state","action","type","types","Object","assign","topTrack","site","actions","createStore","rootReducer","applyMiddleware","thunk","logger","About","className","href","target","Component","withRouter","connect","getHipsterPercent","dispatch","getState","a","console","log","process","axios","post","token","artistResponse","data","artists","length","response","mostPopular","leastPopular","refreshSpotifyToken","setHipsterData","message","createBrowserHistory","logout","localStorage","clear","login","verifiedTokens","tokens","getItem","checkForTokens","needToBreakCache","lastToken","moment","add","checkCacheTimestamp","e","hashParams","r","q","window","location","hash","substring","exec","decodeURIComponent","getHashParams","refresh","pathname","key","history","replace","setItem","format","getAndSetTokens","accessToken","Landing","props","showWhatIsThisBlurb","this","onClick","toggleWhatIsThis","showBlurb","setState","bindActionCreators","Loading","addEmailToList","email","url","success","Results","validEmail","test","String","toLowerCase","track","helpedHipsterPercent","header","order","album","popularity","uri","albumImage","get","artistString","getArtistString","src","artistArray","map","artist","slice","join","quote","toString","getHipsterBlurb","getTopTrackDetails","getTrackDetails","value","placeholder","onChange","updateEmail","validateEmail","FacebookShareButton","hashtag","FacebookIcon","size","round","RedditShareButton","title","RedditIcon","EmailShareButton","subject","body","EmailIcon","TwitterShareButton","hashtags","TwitterIcon","Error","App","to","path","component","params","particles","number","density","enable","value_area","color","opacity","anim","random","speed","line_linked","move","rootElement","document","getElementById","require","config","ReactDOM","render","store"],"mappings":"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","file":"static/js/main.8f2ca7c5.chunk.js","sourcesContent":["// Auth related actions\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\nexport const REFRESH_TOKEN_REQUEST = 'REFRESH_TOKEN_REQUEST';\nexport const REFRESH_TOKEN_SUCCESS = 'REFRESH_TOKEN_SUCCESS';\nexport const REFRESH_TOKEN_FAILURE = 'REFRESH_TOKEN_FAILURE';\n\n// Hipster calculation related\nexport const FETCH_HIPSTER_DATA = 'FETCH_HIPSTER_DATA';\nexport const FETCH_HIPSTER_DATA_SUCCESS = 'FETCH_HIPSTER_DATA_SUCCESS';\nexport const FETCH_HIPSTER_DATA_FAILURE = 'FETCH_HIPSTER_DATA_FAILURE';\nexport const FETCH_ARTISTS = 'FETCH_ARTISTS';\nexport const FETCH_ARTISTS_FAILURE = 'FETCH_ARTISTS_FAILURE';\nexport const FETCH_ARTISTS_SUCCESS = 'FETCH_ARTISTS_SUCCESS';\n\n// Site related actions\nexport const SET_LOADING_MESSAGE = 'SET_LOADING_MESSAGE';\n\n// User related actions\nexport const SUBMIT_CONTACT_EMAIL = 'SUBMIT_CONTACT_EMAIL';\nexport const SUBMIT_CONTACT_SUCCESS = 'SUBMIT_CONTACT_SUCCESS';\nexport const SUBMIT_CONTACT_ERROR = 'SUBMIT_CONTACT_ERROR';\n","import * as types from '../../constants/actions';\n\nconst initialState = {\n    hipsterPercent: null,\n    mostPopularTrack: null,\n    leastPopularTrack: null,\n    emailSubmitSuccess: null,\n    topArtists: [],\n    name: null,\n    loggedIn: false,\n    authToken: null,\n    refreshToken: null\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case types.LOGIN:\n            return Object.assign({}, state, {\n               loggedIn: true,\n                authToken: action.authToken,\n                refreshToken: action.refreshToken\n            });\n        case types.LOGOUT:\n            return Object.assign({}, state, initialState);\n        case types.FETCH_HIPSTER_DATA_SUCCESS:\n            return Object.assign({}, state, {\n                hipsterPercent: action.hipsterPercent,\n                mostPopularTrack: action.mostPopularTrack,\n                leastPopularTrack: action.leastPopularTrack,\n                topTrack: action.topTrack\n            });\n        case types.SUBMIT_CONTACT_SUCCESS:\n            return Object.assign({}, state, {\n                emailSubmitSuccess: true,\n            });\n        case types.SUBMIT_CONTACT_ERROR:\n            return Object.assign({}, state, {\n                emailSubmitSuccess: false,\n            });\n        case types.REFRESH_TOKEN_SUCCESS:\n            return Object.assign({}, state, {\n               authToken: action.authToken\n            });\n        case types.REFRESH_TOKEN_FAILURE:\n            return Object.assign({}, state, initialState);\n        case types.FETCH_ARTISTS_SUCCESS:\n            return Object.assign({}, state, {\n               topArtists: action.topArtists\n            });\n        default:\n            return state;\n    }\n}\n","import * as actions from \"../../constants/actions\";\n\nconst initialState = {\n    error: null,\n    loading: false,\n    loadingMessage: '',\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case actions.LOGOUT:\n            return Object.assign({}, state, initialState);\n        case actions.FETCH_HIPSTER_DATA:\n            return Object.assign({}, state, {\n                error: null,\n                loading: true,\n            });\n        case actions.FETCH_HIPSTER_DATA_FAILURE:\n            return Object.assign({}, state, {\n                error: action.error,\n                loading: false,\n            });\n        case actions.FETCH_HIPSTER_DATA_SUCCESS:\n            return Object.assign({}, state, {\n               loading: false,\n               error: null\n            });\n        case actions.REFRESH_TOKEN_FAILURE:\n            return Object.assign({}, state, {\n                error: action.error\n            });\n        case actions.REFRESH_TOKEN_SUCCESS:\n            return Object.assign({}, state, {\n                error: null\n            });\n        case actions.SET_LOADING_MESSAGE:\n            return Object.assign({}, state, {\n                loadingMessage: action.loadingMessage\n            });\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from \"redux\";\nimport user from \"./user\";\nimport site from \"./site\";\n\nexport default combineReducers({ user, site });\n","import {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger'\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer, applyMiddleware(thunk, logger));\n","import {connect} from 'react-redux';\nimport React, { Component } from 'react';\nimport {\n    withRouter,\n} from \"react-router-dom\";\n\nclass About extends Component {\n\n    render() {\n        return (\n            <div className=\"m-auto mt-36 mx-10 sm:mx-28 h-full mb-20\">\n                <h1 className=\"text-4xl pb-8\">What is this?</h1>\n                <p className=\"text-xl\">The <span className=\"glow\">Hipster Test</span> is a little application I built to experiment with the Spotify API and familiarize\n                    myself with some new technologies. All of the data pulled from Spotify is never saved anywhere, and the login\n                    credentials never touch my site (you'll see Spotify pop up with their own log in window, similar to logging in\n                    through Facebook or Instagram on other sites).</p>\n                <br/>\n                <h1 className=\"text-4xl py-8\">What's next?</h1>\n                <p className=\"text-xl\">While this application may be (tentatively) done, I have plans for a <span className=\"glow\">bigger, badder application</span> coming up.\n                    The new app will focus on <span className=\"glow\">lesser known artists</span> coming to play in <span className=\"glow\">concerts</span> near you, aggregating and filtering based on your preferences.\n                    Pretty cool, right? If you're interested in staying in the loop about this upcoming application, and other hipster-centric apps, <span className=\"glow\">sign up </span>to receive updates!\n                </p>\n                <br/>\n                <p className=\"text-xl\">\n                    Oh, and if you're extra bummed (like me) about not being able to see <i>any</i> shows this year, consider giving to the <span className=\"glow\">Save Our Stages</span> fund.\n                    Donations go to help independent venues stay afloat in this distressing time. Check it out <a href=\"https://www.saveourstages.com/\" target=\"_blank\" className=\"underline glow cursor\"> here </a> or visit\n                    https://www.saveourstages.com.\n                </p>\n                <div className=\"py-10\">\n                    <a className=\"pr-10 text-sm sm:text-lg\" href=\"/documents/PP.pdf\" target=\"_blank\">Privacy Policy</a>\n                    <a className=\"pr-10 text-sm sm:text-lg\" href=\"/documents/EULA.pdf\" target=\"_blank\">User Agreement</a>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default withRouter(connect(null, null)(About));\n","import axios from 'axios';\n\nimport {REFRESH_TOKEN} from \"../constants/responseMessages\";\nimport {refreshSpotifyToken} from \"./authActions\";\nimport {\n    FETCH_ARTISTS_SUCCESS,\n    FETCH_HIPSTER_DATA,\n    FETCH_HIPSTER_DATA_FAILURE,\n    FETCH_HIPSTER_DATA_SUCCESS,\n} from \"../constants/actions\";\n\n\nexport function getHipsterPercent() {\n    return async (dispatch, getState) => {\n        const {authToken, refreshToken} = getState().user;\n        try {\n            dispatch({type: FETCH_HIPSTER_DATA});\n            console.log(process.env.REACT_APP_SERVER_URL);\n            const artistResponse = await axios.post(`${process.env.REACT_APP_SERVER_URL}/artists`, {token: authToken});\n            const {artists = []} = artistResponse.data || {};\n            if (artists.length) {\n                dispatch({type: FETCH_ARTISTS_SUCCESS, topArtists: artists});\n            }\n            const response = await axios.post(`${process.env.REACT_APP_SERVER_URL}/hipster`, {token: authToken});\n            const { error, hipsterPercent, mostPopular, leastPopular, topTrack} = response.data || {};\n            if (error) {\n                if (error === REFRESH_TOKEN) {\n                    dispatch(refreshSpotifyToken(refreshToken));\n                } else {\n                    dispatch({type: FETCH_HIPSTER_DATA_FAILURE, error});\n                    console.log(error);\n                }\n            } else {\n                dispatch(setHipsterData(hipsterPercent, mostPopular, leastPopular, topTrack));\n            }\n        } catch (err) {\n            console.log(err);\n            dispatch({type: FETCH_HIPSTER_DATA_FAILURE, error: err.message});\n        }\n    }\n}\n\nfunction setHipsterData(hipsterPercent, mostPopularTrack, leastPopularTrack, topTrack) {\n    return {\n        type: FETCH_HIPSTER_DATA_SUCCESS,\n        hipsterPercent,\n        mostPopularTrack,\n        leastPopularTrack,\n        topTrack\n    };\n}\n","export const REFRESH_TOKEN = 'User needs to refresh token';\nexport const NETWORK_ERROR = 'Network Error';\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import moment from 'moment';\n\nimport * as types from '../constants/actions';\nimport {getHipsterPercent} from \"./hipsterActions\";\nimport axios from \"axios\";\nimport history from '../history';\n\n\nexport function setLoggedIn(token, refresh) {\n    return {type: types.LOGIN, authToken: token, refreshToken: refresh};\n}\n\nfunction setLogOut() {\n    return {type: types.LOGOUT};\n}\n\nexport function logout() {\n    return dispatch => {\n        localStorage.clear();\n        dispatch(setLogOut());\n    }\n}\n\nfunction checkForTokens(tokens) {\n    let { authToken = null, refreshToken = null } = tokens;\n    if (!authToken || !refreshToken) {\n        refreshToken = localStorage.getItem('refreshToken');\n        authToken = localStorage.getItem('authToken');\n        if (refreshToken && authToken) {\n            tokens = {authToken, refreshToken};\n        } else {\n            tokens = null;\n        }\n    }\n    return tokens;\n}\n\nfunction checkCacheTimestamp() {\n    const lastToken = localStorage.getItem('timestamp');\n    return lastToken && moment(lastToken).add(1, 'day') < moment();\n}\n\n// Appears unused because it is accessed on load\nexport function login() {\n\n    return (dispatch, getState) => {\n\n        const {authToken, refreshToken } = getState().user;\n\n        const tokens = {authToken, refreshToken};\n\n        const verifiedTokens = checkForTokens(tokens);\n        const needToBreakCache = checkCacheTimestamp();\n\n        if (!verifiedTokens || needToBreakCache) {\n            localStorage.clear();\n        }\n\n        dispatch(getAndSetTokens(verifiedTokens));\n    }\n}\n\nfunction getAndSetTokens(tokens) {\n\n    tokens = tokens || getHashParams();\n\n    return (dispatch) => {\n        const location = {\n            pathname: \"/\",\n            hash: \"\",\n            key: \"\"\n        };\n        history.replace(location);\n        if (!tokens.authToken || !tokens.refreshToken || tokens.error) {\n            dispatch(logout());\n        } else {\n            localStorage.setItem('authToken', tokens.authToken);\n            localStorage.setItem('refreshToken', tokens.refreshToken);\n            localStorage.setItem('timestamp', moment().format());\n            dispatch(setLoggedIn(tokens.authToken, tokens.refreshToken));\n            dispatch(getHipsterPercent());\n        }\n    }\n}\n\nexport function refreshSpotifyToken(refreshToken) {\n    return async(dispatch) => {\n        try {\n            dispatch({type: types.REFRESH_TOKEN_REQUEST});\n            const response = await axios.post(`${process.env.REACT_APP_SERVER_URL}/refresh-token`, {refreshToken});\n            const { error, accessToken: authToken} = response.data || {};\n            if (error) {\n                console.log(error);\n                dispatch({type: types.REFRESH_TOKEN_FAILURE, error})\n            } else {\n                dispatch({type: types.REFRESH_TOKEN_SUCCESS, authToken});\n                dispatch(getHipsterPercent());\n            }\n        } catch (err) {\n            console.log(err);\n            dispatch({type: types.REFRESH_TOKEN_FAILURE, error: err});\n        }\n    }\n}\n\n\n// getting the parameters sent from oAuth in server\nfunction getHashParams() {\n    let hashParams = {};\n    let e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q);\n    while (e) {\n        hashParams[e[1]] = decodeURIComponent(e[2]);\n        e = r.exec(q);\n    }\n\n    const {\n        authToken,\n        refreshToken,\n        error\n    } = hashParams;\n\n    if (error) {\n        return error;\n    } else {\n        return {authToken, refreshToken};\n    }\n}\n","import PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport React, { Component } from 'react';\n\nimport {login} from '../actions/authActions';\n\nclass Landing extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showWhatIsThisBlurb: false,\n        };\n    }\n\n    render() {\n\n        const loginUrl = process.env.REACT_APP_SERVER_URL + '/login';\n        const { showWhatIsThisBlurb } = this.state;\n\n        return (\n            <div className={`flex h-screen ${showWhatIsThisBlurb && 'mt-20'}`}>\n            <div className=\"m-auto\">\n                <h1 className=\"text-white text-6xl text-center p-7\"> How <span className=\"glow\">Hipster</span> Are You?</h1>\n                <h2 className=\"text-white text-2xl text-center px-4 max-w-4xl mx-auto my-0\"> We'll analyze your listening habits to determine just how hipster - or mainstream - your taste in music is.</h2>\n                <div className=\"text-center pt-6 pb-3\">\n                    <a href={loginUrl}>\n                        <button className=\"text-white text-center text-2xl border-white border-2 rounded-full p-4 hover:bg-white hover:text-purple-900 transition duration-300 ease-in\" > Login with Spotify </button>\n                    </a>\n                </div>\n                <p className=\"text-white text-lg text-center p-2 cursor-pointer\" onClick={() => this.toggleWhatIsThis(!showWhatIsThisBlurb)}>What is this?</p>\n                {\n                    showWhatIsThisBlurb &&\n                        <p className=\"text-white text-md text-center px-12 pb-20\"> We use <a href=\"https://developer.spotify.com/\" target=\"_blank\" className=\"underline\"> Spotify's API </a>\n                            to read and analyze your listening habits. Per Spotify's terms of use, we don't save any personal data\n                            that we pull from the API. Unfortunately, we can't currently offer this test for the more hipster\n                            music streaming services - consider yourselves too hipster to test. <a href=\"/about\" className=\"underline\"> Read more about the API and our usage here. </a>\n                        </p>\n                }\n            </div>\n            </div>\n        );\n    }\n\n    toggleWhatIsThis(showBlurb) {\n        this.setState({\n            showWhatIsThisBlurb: showBlurb\n        });\n    }\n}\n\nLanding.propTypes = {\n    login: PropTypes.function\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        login: bindActionCreators(login, dispatch),\n    };\n}\n\n\nexport default connect(null, mapDispatchToProps)(Landing)\n","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\n\nclass Loading extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: 'Judging music taste'\n        };\n    }\n\n    render() {\n\n        const { message } = this.state;\n\n        return(\n            <div className=\"flex h-screen\">\n                <div className=\"m-auto text-center\">\n                    <h1 className=\"text-white text-6xl text-center p-7\">{message}...</h1>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        topArtists: state.user.topArtists,\n    };\n}\n\n\nexport default connect(mapStateToProps, null)(Loading);\n","import axios from 'axios';\n\nimport {SUBMIT_CONTACT_EMAIL, SUBMIT_CONTACT_ERROR, SUBMIT_CONTACT_SUCCESS} from \"../constants/actions\";\n\n\nexport function addEmailToList(email) {\n    return async(dispatch) => {\n        dispatch({type: SUBMIT_CONTACT_EMAIL});\n        try {\n            const url = `${process.env.REACT_APP_SERVER_URL}/email-list`;\n            const response = await axios.post(url, {email});\n            const {error, success} = response.data || {};\n            if (!error && success) {\n                dispatch({type: SUBMIT_CONTACT_SUCCESS});\n            } else {\n                dispatch({type: SUBMIT_CONTACT_ERROR});\n            }\n        } catch (err) {\n            console.log(err);\n            dispatch({type: SUBMIT_CONTACT_ERROR});\n        }\n    }\n}\n","import {connect} from 'react-redux';\nimport React, { Component } from 'react';\nimport {\n    withRouter,\n} from \"react-router-dom\";\nimport {\n    EmailShareButton,\n    RedditIcon,\n    EmailIcon,\n    FacebookShareButton,\n    FacebookIcon,\n    TwitterIcon,\n    RedditShareButton,\n    TwitterShareButton,\n} from \"react-share\";\nimport { get } from 'lodash';\n\nimport {bindActionCreators} from \"redux\";\nimport {addEmailToList} from \"../actions/userActions\";\n\nclass Results extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            validEmail: true,\n        };\n    }\n\n    getHipsterBlurb(hipsterPercent) {\n        if (hipsterPercent < 20) {\n            return \"You really need to take a break from Top 40 radio.\";\n        } else if (hipsterPercent < 35) {\n            return \"Eh, you're not totally mainstream.\";\n        } else if (hipsterPercent < 50) {\n            return \"You know some hidden tracks.\";\n        } else if (hipsterPercent < 60) {\n            return \"People go to you for fresh melodies.\";\n        } else if (hipsterPercent < 70) {\n            return \"You're always on the hunt for some underground sounds.\";\n        } else if (hipsterPercent < 80) {\n            return \"Do people ever know what you're listening to?\";\n        } else {\n            return \"Certified hipster\";\n        }\n    }\n\n    validateEmail(email, addEmailToList) {\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        const validEmail = re.test(String(email).toLowerCase());\n        this.setState({\n            validEmail\n        });\n        if (validEmail) {\n            addEmailToList(email);\n        }\n    }\n\n    getTrackDetails(track, helpedHipsterPercent) {\n        const header = helpedHipsterPercent ? 'This Song Helped You Most' : 'This Song Hurt You Most';\n        const order = helpedHipsterPercent ? `order-1 sm:order-0` : `order-2`;\n        const {album, name, artists = [], popularity, uri} = track;\n        const albumImage = get(album, 'images.0.url');\n        const artistString = this.getArtistString(artists);\n        return (\n            <div className={`text-center cursor m-auto self-auto sm:self-end ${order} py-4 sm:py-10`}>\n                <p className=\"text-lg pb-3\">{header}</p>\n                <div>\n                    <a href={uri} target=\"_blank\">\n                        <img src={albumImage} className=\"w-44 block m-auto\"/>\n                        <p className=\"text-lg\">{name}</p>\n                        <p className=\"text-md\">by {artistString}</p>\n                        <p className=\"text-sm\">Popularity: {popularity}/100</p>\n                    </a>\n                </div>\n            </div>\n        )\n    }\n\n    getTopTrackDetails(track) {\n        const {album, name, artists = [], popularity, uri} = track;\n        const albumImage = get(album, 'images.0.url');\n        const artistString = this.getArtistString(artists);\n        return (\n            <div className=\"text-center cursor order-1 sm:order-2 self-auto sm:self-end px-10 py-4 sm:py-10\">\n                <p className=\"text-4xl pb-1\">Your Top Track</p>\n                <p className=\"text-lg pb-3\">Well, according to Spotify</p>\n                <div>\n                    <a href={uri} target=\"_blank\">\n                        <img src={albumImage} className=\"w-60 block m-auto\"/>\n                        <p className=\"text-2xl\">{name}</p>\n                        <p className=\"text-xl\">by {artistString}</p>\n                        <p className=\"text-md\">Popularity: {popularity}/100</p>\n                    </a>\n                </div>\n            </div>\n        )\n    }\n\n    getArtistString(artists = []) {\n        const artistArray = artists.map(artist => artist.name);\n        return artistArray.length == 1 ? artistArray[0] : [ artistArray.slice(0, artistArray.length - 1).join(\", \"), artistArray[artistArray.length - 1] ].join(\" and \");\n    }\n\n    updateEmail(email) {\n        this.setState({\n            email\n        });\n    }\n\n    render() {\n\n        const {\n            addEmailToList,\n            user\n        } = this.props;\n\n        const {\n            hipsterPercent = null,\n            leastPopularTrack,\n            mostPopularTrack,\n            topTrack,\n            emailSubmitSuccess\n        } = user || {};\n\n        const quote = `I got ${hipsterPercent}% hipster! Check out your hipster percent.`;\n        const { email, validEmail } = this.state;\n\n        return (\n            <div className=\"flex h-screen mt-20\">\n                <div className=\"m-auto pt-32 w-full\">\n                    {hipsterPercent &&\n                        <div>\n                            <h1 className=\"text-6xl text-center p-6 glow\">{`${hipsterPercent.toString()}% Hipster`}</h1>\n                            <p className=\"text-center text-3xl\">{this.getHipsterBlurb(hipsterPercent)}</p>\n                        </div>\n                    }\n                    <div className=\"flex flex-col sm:flex-row pt-10\">\n                    {topTrack &&\n                        this.getTopTrackDetails(topTrack)\n                    }\n                    {\n                        mostPopularTrack &&\n                        this.getTrackDetails(mostPopularTrack, false)\n                    }\n                    {\n                        leastPopularTrack &&\n                        this.getTrackDetails(leastPopularTrack, true)\n                    }\n                    </div>\n                    <div className=\"text-center px-20 pb-20\">\n                        <div className=\"py-4\">\n                            <h1 className=\"text-3xl py-4\">Want to <span className=\"glow\">improve</span> your hipster percent?</h1>\n                            <p>I'm building an app to promote <span className=\"glow\">lesser known artists' live shows </span> - and it will be ready to go when it's safe\n                                for us all to sing, dance, perform, head-bang, crowd surf, and mosh together. If you're interested in staying in the loop (and joining the beta)\n                                sign up to join my mailing list! Spam free guaranteed. </p>\n                            <input type=\"email\" className=\"m-auto sm:w-80 h-10 text-lg rounded-full bg-transparent border-2 border-white focus:border-blue-100 mt-10 p-2\" value={email} placeholder=\"totalHipster@gmail.com\" onChange={(e) => this.updateEmail(e.target.value)}/>\n                            <button className=\"text-white bg-transparent border-white border-2 rounded-full p-2 m-2 hover:bg-white hover:text-purple-900 transition duration-300 ease-in\" onClick={() => this.validateEmail(email, addEmailToList)}>Submit</button>\n                            {\n                                validEmail === false &&\n                                    <div>Please enter a valid email.</div>\n                            }\n                            {emailSubmitSuccess === true &&\n                                <div> Successfully added email to mailing list! </div>\n                            }\n                            {emailSubmitSuccess === false &&\n                                <div>Uh oh, we had an issue adding your email to our mailing list.</div>\n                            }\n                        </div>\n                        <div className=\"py-4\">\n                            <h1 className=\"text-3xl py-4\">Miss <span className=\"glow\">live</span> shows?</h1>\n                            <p>Consider giving to the <span className=\"glow\">Save Our Stages</span> fund.\n                                Donations go to help independent venues stay afloat in this distressing time. Check it out <a href=\"https://www.saveourstages.com/\" target=\"_blank\" className=\"underline glow cursor\"> here </a> or visit\n                                https://www.saveourstages.com.</p>\n                        </div>\n                        <div>\n                            <h1 className=\"text-2xl py-4\">Share how hipster you are with friends!</h1>\n                            <div className=\"flex justify-center align-center space-x-8\">\n                                <FacebookShareButton\n                                    url={process.env.REACT_APP_CLIENT_URL}\n                                    quote={quote}\n                                    hashtag=\"#thehipstertest\">\n                                    <FacebookIcon size={48} round/>\n                                </FacebookShareButton>\n                                <RedditShareButton\n                                    url={process.env.REACT_APP_CLIENT_URL}\n                                    title={quote}>\n                                    <RedditIcon size={48} round />\n                                </RedditShareButton>\n                                <EmailShareButton\n                                    subject={'Check out the Hipster Test!'}\n                                    body={quote}\n                                    url={process.env.REACT_APP_CLIENT_URL}>\n                                    <EmailIcon size={48} round />\n                                </EmailShareButton>\n                                <TwitterShareButton\n                                    title={quote}\n                                    hashtags={['hipster', 'thehipstertest', 'hipstertest']}\n                                    url={process.env.REACT_APP_CLIENT_URL}>\n                                    <TwitterIcon size={48} round/>\n                                </TwitterShareButton>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.user\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        addEmailToList: bindActionCreators(addEmailToList, dispatch),\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Results));\n","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {login, logout} from \"../actions/authActions\";\nimport {NETWORK_ERROR} from \"../constants/responseMessages\";\n\n\nclass Error extends Component {\n\n    render() {\n\n        const {error, logout} = this.props;\n\n        let message = error === NETWORK_ERROR ? \"Uh oh, we're having a little trouble.\" : error;\n        let subMessage = \"This is super awkward. Come back in a little bit?\";\n        let showHomeButton = true;\n\n        return(\n            <div className=\"flex h-screen\">\n                <div className=\"m-auto text-center\">\n                    <h1 className=\"text-white text-6xl text-center p-7\">{message}</h1>\n                    <h3 className=\"text-white text-2xl text-center pb-7\">{subMessage}</h3>\n                    {\n                        showHomeButton &&\n                        <button onClick={() => logout()} className=\"text-white text-center text-lg border-white border-2 rounded-full p-2 hover:bg-white hover:text-purple-900 transition duration-300 ease-in\">Return Home</button>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        error: state.site.error\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        login: bindActionCreators(login, dispatch),\n        logout: bindActionCreators(logout, dispatch)\n    };\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Error);\n\n","import React, { Component } from \"react\";\nimport {connect} from 'react-redux';\nimport {\n    Switch,\n    Route,\n    Link,\n    NavLink,\n    withRouter,\n    BrowserRouter\n} from \"react-router-dom\";\nimport Particles from 'react-particles-js';\n\nimport About from './components/About';\nimport Landing from './components/Landing';\nimport Loading from './components/Loading';\nimport Results from './components/Results';\nimport Error from './components/Error';\nimport {bindActionCreators} from \"redux\";\nimport {login, logout} from \"./actions/authActions\";\n\nclass App extends Component {\n\n    componentWillMount() {\n        this.props.login();\n    };\n\n    render() {\n        const { user, error, loading, logout, location} = this.props;\n        const { loggedIn, topArtists } = user;\n        let loadingMessage = \"Checking out your music taste...\";\n        return (\n            <BrowserRouter>\n                <div className=\"App w-full h-full fixed overflow-scroll text-white bg-gradient-to-b from-angsty-purple to-angsty-blue\" >\n                    <div className=\"w-full h-full fixed overflow-scroll\">\n                        <nav className=\"w-full fixed flex-row p-7 text-xl\">\n                            <ul className=\"flex justify-end\">\n                                <li className=\"bg-angsty-purple text-white border-white border-2 rounded-full p-2 sm:p-3 m-2 hover:bg-white hover:text-purple-900 transition duration-300 ease-in\">\n                                    <NavLink to=\"/about\">About</NavLink>\n                                </li>\n                                <li className=\"bg-angsty-purple text-white border-white border-2 rounded-full p-2 sm:p-3 m-2 hover:bg-white hover:text-purple-900 transition duration-300 ease-in\">\n                                    <NavLink to=\"/\">Home</NavLink>\n                                </li>\n                                {loggedIn &&\n                                    <li className=\"bg-angsty-purple text-white border-white border-2 rounded-full p-2 sm:p-3 m-2 hover:bg-white hover:text-purple-900 transition duration-300 ease-in\" onClick={() => logout()}>\n                                        <Link to=\"/\">Log Out</Link>\n                                    </li>\n                                }\n                            </ul>\n                        </nav>\n                        <Switch>\n                            <Route path=\"/about\" component={About} />\n                            <Route path=\"/\">\n                                {\n                                    error ?\n                                        <Error message={error} />\n                                        :\n                                        (\n                                            loading ?\n                                                <Loading message={loadingMessage} artistArray={topArtists}/>\n                                                : (\n                                                    loggedIn ?\n                                                        <Results />\n                                                        :\n                                                        <Landing />\n                                                )\n                                        )\n                                }\n                            </Route>\n                        </Switch>\n                        <div className=\"pr-14 pl-14\">\n                        </div>\n                        <div className=\"text-purple-900 bg-white  text-center fixed left-0 bottom-0 w-full\">\n                            <p> ⓒ <a href=\"http://www.jenniferpridemore.com\" target=\"_blank\">Jennifer Pridemore 2020</a></p>\n                        </div>\n                    </div>\n                    <Particles\n                        params={{\n                            particles: {\n                                number: {\n                                    value: 400,\n                                    density: {\n                                        enable: true,\n                                        value_area: 1000\n                                    }\n                                },\n                                color: {\n                                    value: '#fff'\n                                },\n                                opacity: {\n                                    value: 0.3,\n                                    anim: {\n                                        enable: true\n                                    }\n                                },\n                                size: {\n                                    value: 3,\n                                    random: true,\n                                    anim: {\n                                        enable: true,\n                                        speed: 7\n                                    }\n                                },\n                                line_linked: {\n                                    enable: false\n                                },\n                                move: {\n                                    speed: 1\n                                }\n                            }\n                        }}\n                    />\n                </div>\n            </BrowserRouter>\n        );\n    }\n\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.user,\n        error: state.site.error,\n        loading: state.site.loading,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        login: bindActionCreators(login, dispatch),\n        logout: bindActionCreators(logout, dispatch)\n    };\n}\n\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(App));\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './redux/store';\nimport './index.css';\nimport App from './App'\n\nconst rootElement = document.getElementById('root');\nrequire('dotenv').config();\n\nReactDOM.render(\n<Provider store={store}>\n    {\n        <Router>\n            <App />\n        </Router>\n    }\n</Provider>,\nrootElement\n);\n"],"sourceRoot":""}